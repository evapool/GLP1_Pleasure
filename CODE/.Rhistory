rm(list = ls())
if(!require(pacman)) {
install.packages('pacman')
library(pacman)
}
pacman::p_load(lme4, lmerTest, rstudioapi, ggplot2, grid, gridExtra, tidyverse, plyr,
multcomp, afex, MBESS, WebPower, emmeans, Rmisc, JWileymisc,
kableExtra,BayesFactor,cmdstanr, brms,devtools,bayestestR,logspline)
pacman::p_load(tinylabels, apaTables, MBESS, afex, ggplot2,
ggpubr, Rmisc, emmeans, tidyr, BayesFactor,
bayestestR, devtools, lspline, kableExtra, sjPlot,
knitr, XML, rlist, janitor, optimx, ggthemes, dplyr,
JWileymisc, corrplot, caret, intmed, stringr, cowplot,
pander, psych, cmdstanr, brms, tidybayes, tibble, pbkrtest, scales)
devtools::source_gist("2a1bb0133ff568cbe28d",
filename = "geom_flat_violin.R")
devtools::source_gist("383aa93ffa161665c0dca1103ef73d9d",
filename = "effect_CI.R")
current_dir <- dirname(getActiveDocumentContext()$path)
setwd(current_dir)
setwd('..')
home_path <- getwd()
setwd(home_path)
set_cmdstan_path(path = '/anaconda2/envs/stan-env/bin/cmdstan/')
analysis_path <- dirname(getActiveDocumentContext()$path)
figures_path  <- file.path(analysis_path, 'figures')
output_path <-  file.path(analysis_path, "outputs")
source(file.path(analysis_path,'R','utils.R'), echo=F)# useful functions
BEHAV  <- read.delim(file.path(home_path, 'behavioral','databases',"OBIWAN_HEDONIC.txt"), header = T, sep ='') # read in dataset
METAB <- read.csv(file.path(home_path,'behavioral','databases','METABOLIC.csv'), header = T, sep =',') # read in dataset
NEEDS <- read.csv(file.path(home_path,'behavioral','databases','internal.csv'), header = T, sep =',') # read in dataset
METAB2 <- read.csv(file.path(home_path,'behavioral','databases','Full_metabolic.csv'), header = T, sep =',') # read in dataset
averaged_theme <- theme_bw(base_size = 20, base_family = "Helvetica")+
theme(strip.text.x = element_text(size = 12, face = "bold"),
strip.background = element_rect(color="white", fill="white", linetype="solid"),
panel.grid.major.x = element_blank() ,
panel.grid.major.y = element_line(size=.2, color="lightgrey"),
panel.grid.minor = element_blank(),
legend.text  = element_text(size =  14),
legend.title = element_text(size =  14),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size =  20),
axis.line = element_line(size = 0.5))
timeline_theme <- theme_bw(base_size = 20, base_family = "Helvetica")+
theme(strip.text.x = element_text(size = 20, face = "bold"),
strip.background = element_rect(color="white", fill="white", linetype="solid"),
panel.grid.major.x = element_blank() ,
panel.grid.major.y = element_line(size=.2, color="lightgrey"),
panel.grid.minor = element_blank(),
legend.text  = element_text(size =  14),
legend.title = element_text(size =  14),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size =  20),
axis.line = element_line(size = 0.5))
pal = viridis::inferno(n=5)
my_control = lmerControl(optimizer ='optimx', optCtrl=list(method='nlminb'))
options(contrasts = c("contr.sum", "contr.poly")) # this is very important
METAB2 = METAB2[order(METAB2$id, decreasing = TRUE), ]
METAB = METAB[order(METAB$id, decreasing = TRUE), ]
METAB2$intervention <- METAB$intervention
METAB2$intervention <- dplyr::recode(METAB2$intervention, "0" = "Placebo", "1" = "Liraglutide" )
BEHAV = subset (BEHAV, group != "control")
METAB$ageF = METAB$age;
METAB$weightLoss = -(METAB$BMI_diff);
METAB$bmi1 = METAB$BMI_V1; METAB$dif_interv = METAB$Date_diff
biomed <- c('age','Date_diff','BW_diff','BMI_diff','WC_diff','Insulin_diff','X2.AG_diff','reelin_diff','MCP_diff','TNFalpha_diff','GLP_diff','Ghrelin_diff','Glu_diff','HOMA_IR_diff', 'AEA_diff', 'OEA_diff', 'PEA_diff', 'BMI_V1')
METAB = METAB %>% group_by %>% mutate_at(biomed, scale)
df_dict <- data.frame(variable = biomed, out_low = rep(-3,length(biomed)),  out_high = rep(3,length(biomed)))
for (var in df_dict$variable) {
METAB[[var]][METAB[[var]] < df_dict[df_dict$variable == var, ]$out_low | METAB[[var]] > df_dict[df_dict$variable == var, ]$out_high] <- NaN}
ALL = join(BEHAV, METAB, by = "id")
ALL = subset (ALL, id != "201" &
id != "208" &
id != "210" &
id != "214" &
id != "214" &
id != "216" &
id != "219" &
id != "222" &
id != "223" &
id != "233" &
id != "234" &
id != "240" &
id != "245" &
id != "247" &
id != "249" &
id != "258" &
id != "263" &
id != "267"
)
ALL = subset (ALL, id != "226" &
id != "228" &
id != "234" &
id != "242"
)
fac <- c("id", "trial", "condition", "session", "intervention", "gender"); ALL[fac] <- lapply(ALL[fac], factor)
ALL$gender  <- dplyr::recode(ALL$gender, "0" = "Female", "1" = "Male" )
ALL$intervention <- dplyr::recode(ALL$intervention, "0" = "Placebo", "1" = "Liraglutide" )
HED.means <- aggregate(ALL$perceived_liking, by = list(ALL$id, ALL$condition, ALL$session, ALL$intervention), FUN='mean', na.rm = T) # extract means
colnames(HED.means) <- c('id','condition','session', 'intervention','perceived_liking')
HED.trial <- aggregate(ALL$perceived_liking, by = list(ALL$id, ALL$trialxcondition, ALL$condition, ALL$session, ALL$intervention), FUN='mean') # extract means
colnames(HED.trial) <- c('id',"trialxcondition",'condition',"session","intervention","perceived_liking")
df.demo <- aggregate(ALL$bmi1, by = list(ALL$id, ALL$ageF, ALL$BW_V1, ALL$WC_V1, ALL$gender, ALL$intervention), FUN='mean', na.rm = T) # extract means
colnames(df.demo) <- c('id','age',"body weight", "waist circumference",'gender', 'intervention','BMI')
table_demo <- egltable(c("BMI", "age", "body weight", "waist circumference", "gender"),
g = "intervention", data = df.demo, strict = FALSE) %>%
kbl(caption ="Demografics of Trial Population Before Intervetion", digits = 2) %>%
kable_styling(latex_options = "HOLD_position", position = "center", full_width = F) %>%
row_spec(0,bold=T,align='c')
pdf(file.path(figures_path,'Table_Demografics.pdf'))
dev.off()
METAB2  = subset (METAB2 , id != "201" & id != "200" &
id != "208" &
id != "210" &
id != "214" &
id != "214" &
id != "216" &
id != "219" &
id != "222" &
id != "223" &
id != "233" &
id != "234" &
id != "240" &
id != "245" &
id != "247" &
id != "249" &
id != "258" &
id != "263" &
id != "267")
METAB2 = subset (METAB2 , id != "226" &  id != "228" &  id != "234" & id != "242" & id != "212" & id != "264")
meta.subscale <- c("id","BMI_diff", "BW_diff", "WC_diff", "intervention", "Insulin_diff", "Glu_diff",
"SPB_diff","DBP_diff","HR_diff", "ChTot_diff","HDL_diff", "LDL_diff","TG_diff",
"HBA1c_diff")
df.meta <- METAB2[meta.subscale]
colnames(df.meta) <- c('id','BMI',"body weight", "waist circumference", 'intervention',
'insuline','gluca','systolic blood pressure', 'diastolic blood pressure',
'heart rate', 'total cholesterol',# missing leptin and adiopecin # restini #obestatin
'HDL cholesterol', 'LDL cholesterol','Triglycerides','HbA1c')
meta.variables <- c('BMI',"body weight", "waist circumference",
'insuline','gluca','systolic blood pressure', 'diastolic blood pressure',
'heart rate', 'total cholesterol',# missing leptin and adiopecin # restini #obestatin
'HDL cholesterol', 'LDL cholesterol','Triglycerides','HbA1c')
table_medic <- egltable(meta.variables, g = "intervention", data = df.meta, strict = FALSE) %>%
kbl(caption ="Change in secondary end points from baseline to 16-week follow-up", digits = 2) %>%
kable_styling(latex_options = "HOLD_position", position = "center", full_width = F) %>%
row_spec(0,bold=T,align='c')
table_medic
df.weight <- aggregate(ALL$BMI_diff, by = list(ALL$id, ALL$gender, ALL$age, ALL$intervention), FUN='mean', na.rm = T) # extract means
colnames(df.weight) <- c('id','gender','age', 'intervention','BMI_diff')
mf = formula(BMI_diff ~ intervention + gender + age  + (1|id))
BMI_diff
df.weight
ALL$bmi1
ALL$BMI_V10
ALL$BMI_Diff_raw = ALL$bmi1 - ALL$BMI_V10
df.weight <- aggregate(ALL$BMI_Diff_raw, by = list(ALL$id, ALL$gender, ALL$age, ALL$intervention), FUN='mean', na.rm = T) # extract means
colnames(df.weight) <- c('id','gender','age', 'intervention','BMI_Diff_raw')
weight.pp <- summarySE(df.weight,
measurevar = c("BMI_Diff_raw"),
groupvars = "intervention")
weight.pp
p_weight = ggplot(df.weight, aes(x = intervention, y = BMI_Diff_raw, fill = intervention, color = intervention)) +
geom_abline(slope=0, intercept=0, linetype = "dashed", color = "black") +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .1, aes(fill = intervention, color = NA), color = NA) +
geom_point(aes(group = id, y = BMI_Diff_raw), alpha = .3, position = position_dodge(0.2), size = 0.5) +
geom_crossbar(data = weight.pp, aes(y = BMI_Diff_raw, ymin=BMI_Diff_raw-se, ymax=BMI_Diff_raw+se), width = 0.5 , alpha = 0.1) +
ylab('Weight Loss [BMI post - BMI pre]') +
xlab('Intervention') +
scale_fill_manual(values=c("Placebo"= pal[1], "Liraglutide"=pal[3]), guide = 'none') +
scale_color_manual(values=c("Placebo"=pal[1], "Liraglutide"=pal[3]), guide = 'none') +
theme_bw()
ggplot(df.weight, aes(x = intervention, y = BMI_Diff_raw, fill = intervention, color = intervention)) +
geom_abline(slope=0, intercept=0, linetype = "dashed", color = "black") +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .1, aes(fill = intervention, color = NA), color = NA) +
geom_point(aes(group = id, y = BMI_Diff_raw), alpha = .3, position = position_dodge(0.2), size = 0.5) +
geom_crossbar(data = weight.pp, aes(y = BMI_Diff_raw, ymin=BMI_Diff_raw-se, ymax=BMI_Diff_raw+se), width = 0.5 , alpha = 0.1) +
ylab('Weight Loss [BMI post - BMI pre]') +
xlab('Intervention') +
scale_fill_manual(values=c("Placebo"= pal[1], "Liraglutide"=pal[3]), guide = 'none') +
scale_color_manual(values=c("Placebo"=pal[1], "Liraglutide"=pal[3]), guide = 'none') +
theme_bw()
p_weight = ggplot(df.weight, aes(x = intervention, y = BMI_Diff_raw, fill = intervention, color = intervention)) +
geom_abline(slope=0, intercept=0, linetype = "dashed", color = "black") +
geom_flat_violin(scale = "count", trim = FALSE, alpha = .1, aes(fill = intervention, color = NA), color = NA) +
geom_point(aes(group = id, y = BMI_Diff_raw), alpha = .3, position = position_dodge(0.2), size = 0.5) +
geom_crossbar(data = weight.pp, aes(y = BMI_Diff_raw, ymin=BMI_Diff_raw-se, ymax=BMI_Diff_raw+se), width = 0.5 , alpha = 0.1) +
ylab('Weight Loss [BMI post - BMI pre]') +
xlab('Intervention') +
scale_fill_manual(values=c("Placebo"= pal[1], "Liraglutide"=pal[3]), guide = 'none') +
scale_color_manual(values=c("Placebo"=pal[1], "Liraglutide"=pal[3]), guide = 'none') +
theme_bw()
p_weight + timeline_theme
pdf(file.path(figures_path,'Figure_Weight_Loss_raw.pdf'))
pdf(file.path(figures_path,'Figure_Weight_Loss_raw.pdf'))
print(p_weight )
dev.off()
p_weight + timeline_theme
averaged_theme <- theme_bw(base_size = 20, base_family = "Helvetica")+
theme(strip.text.x = element_text(size = 12, face = "bold"),
strip.background = element_rect(color="white", fill="white", linetype="solid"),
panel.grid.major.x = element_blank() ,
panel.grid.major.y = element_line(size=.2, color="lightgrey"),
panel.grid.minor = element_blank(),
legend.text  = element_text(size =  14),
legend.title = element_text(size =  14),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size =  20),
axis.line = element_line(size = 0.5))
timeline_theme <- theme_bw(base_size = 20, base_family = "Helvetica")+
theme(strip.text.x = element_text(size = 20, face = "bold"),
strip.background = element_rect(color="white", fill="white", linetype="solid"),
panel.grid.major.x = element_blank() ,
panel.grid.major.y = element_line(size=.2, color="lightgrey"),
panel.grid.minor = element_blank(),
legend.text  = element_text(size =  14),
legend.title = element_text(size =  14),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size =  20),
axis.line = element_line(size = 0.5))
p_weight + timeline_theme
p_weight + timeline_theme
p_weight = p_weight + timeline_theme
pdf(file.path(figures_path,'Figure_Weight_Loss_raw.pdf'))
print(p_weight )
dev.off()
p_weight = p_weight + timeline_theme
p_weight
